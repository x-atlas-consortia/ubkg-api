openapi: 3.0.3
info:
  title: UBKG API
  description: This document describes the UBKG API
  version: 1.2.0
servers:
  - url: https://ontology.src.hubmapconsortium.org/
paths:
  /codes/{code_id}/codes:
    get:
      summary: Returns a list of code_ids {Concept, Code, SAB} that code the same concept(s) as the code_id, optionally restricted to source (SAB)
      operationId: codes_code_id_codes_get
      parameters:
        - name: code_id
          in: path
          required: true
          description: The code identifier
          schema:
            type: string
            example: SNOMEDCT_US 254837009
        - name: sab
          in: query
          required: false
          description: One or more sources (SABs) to return
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              example: NCI,MDR
            default: []
      responses:
        '200':
          description: A JSON array of dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodesCodesObj'
  /codes/{code_id}/concepts:
    get:
      operationId: codes_code_id_concepts_get
      summary: Returns a list of concepts {Concept, Prefterm} that the code_id codes
      parameters:
        - name: code_id
          in: path
          required: true
          description: The code identifier
          schema:
            type: string
            example: SNOMEDCT_US 254837009
      responses:
        '200':
          description: A JSON array of dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConceptDetail'
  /concepts/{concept_id}/codes:
    get:
      operationId: concepts_concept_id_codes_get
      summary: Returns a distinct list of code_id(s) that code the concept
      parameters:
        - name: concept_id
          in: path
          required: true
          description: The concept identifier
          schema:
            type: string
            example: C0678222
        - name: sab
          in: query
          required: false
          description: One or more sources (SABs) to return
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              example: MEDLINEPLUS,MSH,MEDCIN
            default: []
      responses:
        '200':
          description: A JSON array of code_id(s) that code the concept
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: CHV 0000052645
  /concepts/{concept_id}/concepts:
    get:
      operationId: concepts_concept_id_concepts_get
      summary: Returns a list of concepts {Sab, Relationship, Concept, Prefterm} related to the concept
      parameters:
        - name: concept_id
          in: path
          required: true
          description: The concept identifier
          schema:
            type: string
            example: C0006142
      responses:
        '200':
          description: A JSON array of {Sab, Relationship, Concept, Prefterm} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SabRelationshipConceptTerm'
  /concepts/expand:
    post:
      operationId: concepts_expand_post
      summary: Returns a unique list of concepts (Concept, Preferred Term) on all paths including starting concept (query_concept_id) restricted by list of relationship types (rel), list of relationship sources (sab), and depth of travel.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConceptSabRelDepth"
            example:
              query_concept_id: C2720507
              sab: [SNOMEDCT_US, HGNC]
              rel: [isa, isa]
              depth: 2
      responses:
        '200':
          description: Return all {concept, prefterm}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConceptPrefterm'
  /concepts/paths:
    post:
      operationId: concepts_path_post
      summary: Return all paths of the relationship pattern specified within the selected sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConceptSabRel"
            example:
              query_concept_id: C2720507
              sab: [SNOMEDCT_US, HGNC]
              rel: [isa, isa]
      responses:
        '200':
          description: Return all paths of the relationship pattern specified within the selected sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathItemConceptRelationshipSabPrefterm'
  /concepts/shortestpaths:
    post:
      operationId: concepts_shortestpaths_post
      summary: Return all paths of the relationship pattern specified within the selected sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QconceptTconceptSabRel"
            example:
              query_concept_id: C2720507
              target_concept_id: C1272753
              sab: [SNOMEDCT_US, HGNC]
              rel: [isa, part_of]
      responses:
        '200':
          description: Return all paths of the relationship pattern specified within the selected sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathItemConceptRelationshipSabPrefterm'
  /concepts/trees:
    post:
      operationId: concepts_trees_post
      summary: Return all paths of the relationship pattern specified within the selected sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConceptSabRelDepth"
            example:
              query_concept_id: C2720507
              sab: [SNOMEDCT_US, HGNC]
              rel: [isa, isa]
              depth: 2
      responses:
        '200':
          description: Return all paths of the relationship pattern specified within the selected sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathItemConceptRelationshipSabPrefterm'
  /concepts/{concept_id}/definitions:
    get:
      operationId: concepts_concept_id_definitions_get
      summary: Returns a list of definitions {Sab, Definition} of the concept
      parameters:
        - name: concept_id
          in: path
          required: true
          description: The concept identifier
          schema:
            type: string
            example: C0006142
      responses:
        '200':
          description: A JSON array of {Sab, Definition} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SabDefinition'
  /concepts/{concept_id}/semantics:
    get:
      operationId: concepts_concept_id_semantics_get
      summary: Returns a list of semantic_types {Sty, Tui, Stn} of the concept
      parameters:
        - name: concept_id
          in: path
          required: true
          description: The concept identifier
          schema:
            type: string
            example: C0304055
      responses:
        '200':
          description: A JSON array of {Sty, Tui, Stn} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StyTuiStn'
  /semantics/{semantic_id}/semantics:
    get:
      operationId: semantics_semantic_id_semantics_get
      summary: Returns a list of semantic_types {queryTUI, querySTN ,semantic, TUI_STN} of the semantic type
      parameters:
        - name: semantic_id
          in: path
          required: true
          description: The semantic identifier
          schema:
            type: string
            example: Physical Object
      responses:
        '200':
          description: A JSON array of {queryTUI, querySTN ,semantic, TUI_STN} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QQST'
  /tui/{tui_id}/semantics:
    get:
      operationId: tui_tui_id_semantics_get
      summary: Returns a list of symantic_types {semantic, STN} of the type unique id (tui)
      parameters:
        - name: tui_id
          in: path
          required: true
          description: The TUI identifier
          schema:
            type: string
            example: T200
      responses:
        '200':
          description: A JSON array of {semantic, STN} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SemanticStn'
  /terms/{term_id}/codes:
    get:
      operationId: terms_term_id_codes_get
      summary: Returns a list of codes {TermType, Code} of the text string
      parameters:
        - name: term_id
          in: path
          required: true
          description: The term identifier
          schema:
            type: string
            example: Breast cancer
      responses:
        '200':
          description: A JSON array of {TermType, Code} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TermtypeCode'
  /terms/{term_id}/concepts:
    get:
      operationId: terms_term_id_concepts_get
      summary: Returns a list of concepts associated with the text string
      parameters:
        - name: term_id
          in: path
          required: true
          description: The term identifier
          schema:
            type: string
            example: Breast cancer
      responses:
        '200':
          description: A JSON array of concepts associated with the term
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: C0794811
  /terms/{term_id}/concepts/terms:
    get:
      operationId: terms_term_id_concepts_terms_get
      summary: Returns an expanded list of concept(s) and preferred term(s) {Concept, Term} from an exact text match 
      parameters:
        - name: term_id
          in: path
          required: true
          description: The term identifier
          schema:
            type: string
            example: Breast cancer
      responses:
        '200':
          description: A JSON array of {Concept, Term} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConceptTerm'
  /valueset:
    get:
      operationId: valueset_get
      summary: Returns a valueset of concepts that are children (have as isa relationship) of another concept.
      parameters:
        - name: parent_sab
          in: query
          required: true
          description: the SAB of the parent concept
          schema:
            type: string
            example: HUBMAP
        - name: parent_code
          in: query
          required: true
          description: the code of the parent concept in the SAB (local ontology)
          schema:
            type: string
            example: C000530
        - name: child_sabs
          in: query
          required: true
          description: the list of SABs for child concepts, in order of preference (in case of parent concepts with cross-references)
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              example: HUSAT,SNOMEDCT_US
            default: [ ]
      responses:
        '200':
          description: A JSON array of preferred terms for child codes that have an isa relationship with the parent code
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SabCodeTerm'
  /datasets: # JAS FEB 2023 - note that parameters use underscores, even when the corresponding key in the response uses dashes--e.g., alt_names, alt-names
    get:
      operationId: dataset_get
      summary: Returns information on a set of HuBMAP or SenNet dataset types, with options to filter the list to those with specific property values. Filters are additive (i.e., boolean AND)
      parameters:
        - name: application_context
          in: query
          required: true
          description: Required filter to indicate application context.
          schema:
            type: string
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
        - name: data_type
          in: query
          required: false
          description: Optional filter for data_type
          schema:
            type: string
            example: AF
        - name: description
          in: query
          required: false
          description: Optional filter for display name. Use URL-encoding (space = %20).
          schema:
            type: string
            example: Autofluorescence%20Microscopy
        - name: alt_name
          in: query
          required: false
          description: Optional filter for a single element in the alt-names list--i.e., return datasets for which alt-names includes a value that matches the parameter. Although the field is named 'alt-names', the parameter uses 'alt_name'. Use URL-encoding (space = %20)
          schema:
            type: string
            example: Light%20Sheet
        - name: primary
          in: query
          required: false
          description: Optional filter to filter to primary (true) or derived (false) assay.
          schema:
            type: string
            enum:
              - true
              - false
        - name: contains_pii
          in: query
          required: false
          description: Optional filter for whether the dataset contains Patient Identifying Information (PII). Although the field is named 'contains-pii', use 'contains_pii' as an argument.
          schema:
            type: string
            enum:
              - true
              - false
        - name: vis_only
          in: query
          required: false
          description: Optional filter for whether datasets are visualization only (true). Although the field is named 'vis-only', use 'vis_only' as an argument.
          schema:
            type: string
            enum:
              - true
              - false
        - name: vitessce_hint
          in: query
          required: false
          description: Optional filter for a single element in the vitessce_hint list--i.e., return datasets for which vitessce_hints includes a value that matches the parameter. Although the field is named 'vitessce-hints', use 'vitessce_hint' as an argument.
          schema:
            type: string
            enum:
              - pyramid
              - anndata
              - is_image
              - is_tiled
              - is_sc
              - rna
              - atac
              - sprm
              - codex
              - maldi
        - name: dataset_provider
          in: query
          required: false
          description: Optional filter to identify the dataset provider - IEC (iec)  or external (lab)
          schema:
            type: string
            enum:
              - iec
              - IEC
              - external
              - External
              - lab
              - Lab
      responses:
        '200':
          description: A JSON array of dataset types with properties, optionally filtered by parameters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DatasetPropertyInfo'
  /assaytype/{name}: # CPK MAR 2023 - replacement for search-src endpoint of the same name
    get:
      operationId: assaytype_name_get
      summary: Replacement for the same endpoint in search-api with the addition of application_context
      parameters:
        - name: name
          in: path
          required: true
          description: AssayType name
          schema:
            type: string
            example: bulk-RNA
        - name: application_context
          in: query
          required: false
          description: Filter to indicate application context
          schema:
            type: string
            default: HUBMAP
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
      responses:
        '200':
          description: A JSON array of the assay type name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayTypePropertyInfo'
              example:
                name: bulk-RNA
                primary: true
                description: Bulk RNA-seq
                vitessce-hints: ["pyramid","anndata"]
                contains-pii: true
                vis-only: true
  /assayname: # CPK MAR 2023 - replacement for search-api endpoint of the same name
    post:
      operationId: assayname_post
      summary: Replacement for the same endpoint in search-api
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssayNameRequest"
            example:
              name: [ PAS, Image Pyramid ]
              application_context: HUBMAP
      responses:
        '200':
          description: A JSON array of the assay type name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssayTypePropertyInfo'
              example:
                name: bulk-RNA
                primary: true
                description: Bulk RNA-seq
                vitessce-hints: ["pyramid","anndata"]
                contains-pii: true
                vis-only: true
  /organs:
    get:
      operationId: get_organ_types
      summary: Returns 2 letter organ codes to support the Registration User Interface (RUI)
      parameters:
        - name: application_context
          in: query
          required: false
          description: Filter to indicate application context
          schema:
            type: string
            default: HUBMAP
            enum:
              - HUBMAP
              - SENNET
              - hubmap
              - sennet
              - HuBMAP
              - SenNet
      responses:
        '200':
          description: A JSON array of the organ types
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SabCodeTermRuiCode'
components:
  schemas:
    CodesCodesObj: # Schema name
      type: object
      properties:
        concept:
          type: string
          example: C0006142
        code:
          type: string
          example: CCS 2.5
        SAB:
          type: string
          example: CCF
    ConceptDetail:    # Schema name
      type: object
      properties:
        concept:
          type: string
          example: C0006142
        prefterm:
          type: string
          example: Malignant neoplasm of breast
    ConceptSabRel:    # Schema name
      type: object
      properties:
        query_concept_id:
          type: string
          example: C2720507
        sab:
          type: array
          items:
            type: string
          example: ["SNOMEDCT_US", "HGNC"]
        rel:
          type: array
          items:
            type: string
          example: ["isa", "isa"]
    ConceptSabRelDepth:    # Schema name
      type: object
      properties:
        query_concept_id:
          type: string
          example: C2720507
        sab:
          type: array
          items:
            type: string
          example: ["SNOMEDCT_US", "HGNC"]
        rel:
          type: array
          items:
            type: string
          example: ["isa","isa"]
        depth:
          type: integer
          example: 2
    ConceptPrefterm: # Schema name
      type: object
      properties:
        concept:
          type: string
          example: C0006826
        prefterm:
          type: string
          example: Malignant Neoplasms
    ConceptTerm: # Schema name
      type: object
      properties:
        concept:
          type: string
          example: C0006826
        term:
          type: string
          example: LNC LA14283-8
    PathItemConceptRelationshipSabPrefterm: # Schema name
      type: object
      properties:
        path:
          type: string
        item:
          type: string
        concept:
          type: string
          example: C0006826
        relationship:
          type: string
          example: CHD
        sab:
          type: string
          example: ICD10AM
        prefterm:
          type: string
          example: Malignant Neoplasms
    QconceptTconceptSabRel:    # Schema name
      type: object
      properties:
        query_concept_id:
          type: string
          example: C2720507
        target_concept_id:
          type: string
          example: C1272753
        sab:
          type: array
          items:
            type: string
          example: ["SNOMEDCT_US", "HGNC"]
        rel:
          type: array
          items:
            type: string
          example: ["isa", "part_of"]
    QQST: # Schema name
      type: object
      properties:
        queryTUI:
          type: string
          example: T072
        querySTN:
          type: string
          example: A1
        semantic:
          type: string
          example: Entity
        TUI:
          type: string
          example: T071
        STN:
          type: string
          example: A
    SabDefinition: # Schema name
      type: object
      properties:
        sab:
          type: string
          example: NCI
        definition:
          type: string
          example: A primary or metastatic malignant neoplasm involving the breast. The vast majority of cases are carcinomas arising from the breast parenchyma or the nipple. Malignant breast neoplasms occur more frequently in females than in males.
    SabRelationshipConceptTerm: # Schema name
      type: object
      properties:
        sab:
          type: string
          example: ICD10AM
        relationship:
          type: string
          example: CHD
        concept:
          type: string
          example: C0006826
        prefterm:
          type: string
          example: Malignant Neoplasms
    SemanticStn: # Schema name
      type: object
      properties:
        semantic:
          type: string
          example: Entity
        STN:
          type: string
          example: A
    StyTuiStn: # Schema name
      type: object
      properties:
        sty:
          type: string
          example: Organic Chemical
        tui:
          type: string
          example: T109
        stn:
          type: string
          example: A1.4.1.2.1
    TermtypeCode: # Schema name
      type: object
      properties:
        termtype:
          type: string
          example: LA
        code:
          type: string
          example: LNC LA14283-8
    SabCodeTerm: # Schema name
      type: object
      properties:
        sab:
          type: string
          example: NCI
        code:
          type: string
          example: C16853
        term:
          type: string
          example: Microscopy
    DatasetPropertyInfo: # Schema name JAS FEB 2023. Note that GET parameters use underscores, even when the corresponding key in the response uses dashes--e.g., alt_names, alt-names.
      type: object
      description: Properties of a HuBMAP/SenNet Dataset. Where applicable, key names match those found in the original assay_types.yaml.
      properties:
        alt-names:
          type: array
          description: Alternative/deprecated synonyms of data_type that may still be associated with dataset entities
          items:
            type: string
          example: [ "MALDI-IMS-pos", "MALDI-IMS-neg" ]
        contains-pii:
          type: string
          description: Whether the dataset contains Patient Identifying Information (PII)
          example: true
        data_type:
          type: string
          description: Data type for the dataset; used to characterize dataset entities in provenance hierarchy
          example: bulk-RNA
        dataset_provider:
          type: string
          description: Identifies the provider of the dataset. 'External Provider' also referred to as 'lab-processed'.
          example: HuBMAP IEC
        description:
          type: string
          description: How datasets of the data type are named in the Data Portal.
          example: Bulk RNA-seq
        primary:
          type: string
          description: Indicates whether the assay is primary (true) or derived (false)
          example: true
        vis-only:
          type: string
          description: Indicates whether for visualization only
          items:
            type: string
            example: true
        vitessce-hints:
          type: array
          description: Flags for Vitessce visualization
          items:
            type: string
            example: ["pyramid","anndata","is_image","is_tiled","is_sc","rna","atac","sprm","codex","maldi"]
          example: Microscopy
    AssayTypePropertyInfo: # Schema name CPK MR 2023. search-src replacement subsset of DatasetPropertyInfo
      type: object
      description: Properties of a HuBMAP/SenNet AssayType. 'DatasetPropertyInfo.data_type' matches key in original assay_types.yaml.
      properties:
        name:
          type: string
          description: AssayType name; used to characterize dataset entities in provenance hierarchy
          example: bulk-RNA
        primary:
          type: boolean
          description: Indicates whether the assay is primary (true) or derived (false)
          example: true
        description:
          type: string
          description: How datasets of the data type are named in the Data Portal.
          example: Bulk RNA-seq
        vitessce-hints:
          type: array
          description: Flags for Vitessce visualization
          items:
            type: string
            example: ["pyramid","anndata","is_image","is_tiled","is_sc","rna","atac","sprm","codex","maldi"]
        contains-pii:
          type: boolean
          description: Whether the dataset contains Patient Identifying Information (PII) (true or false)
          example: true
        vis-only:
          type: boolean
          description: Indicates whether for visualization only (true or false)
          items:
            type: boolean
            example: true
    AssayNameRequest: # Schema name CPK MR 2023.
      type: object
      description: Request body for assaytype POST request
      properties:
        name:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: AssayType name which can be a string or an array of strings
          example: [ PAS, Image Pyramid ]
        application_context:
          type: string
          default: HUBMAP
          enum:
            - HUBMAP
            - SENNET
            - hubmap
            - sennet
            - HuBMAP
            - SenNet
    SabCodeTermRuiCode:
      type: object
      description: Respoonse body for organs GET request
      properties:
        sab:
          type: string
          description: Source abbreviation
          example: "HUBMAP"
        term:
          type: string
          description: Organ type
          example: "Uterus"
        code:
          type: string
          description: The identifier for a concept in a vocabulary or ontology in the UMLS. A code is unique to the ontology.
          example: "C030081"
        rui_code:
          type: string
          description: Two letter organ code
          example: "UT"
