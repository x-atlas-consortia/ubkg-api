openapi: 3.0.3
info:
  title: UBKG API
  description: The UBKG API provides REST endpoints that return results from queries against an instance of the [Unified Biomedical Knowledge Graph (UBKG)](https://ubkg.docs.xconsortia.org/).
  version: "1.4"
  contact:
    name: GitHub repository
    url: https://github.com/x-atlas-consortia/ubkg-api
servers:
  - url: https://ontology.api.hubmapconsortium.org/
    description: Production server
  - url: https://ontology-api.dev.hubmapconsortium.org/
    description: Development server
paths:
  /codes/{code_id}/codes:
    get:
      summary:  In general, a Concept node in UBKG has CODE relationships with (links to) Code nodes from multiple source vocabularies (SABs). For example, the Code "SNOMEDCT_US:254837009" (Malignant neoplasm of breast) links to the Concept with identifier "C0006142"; this Concept also links to Code nodes with identifiers including "NCI:C9335" and "MSH:D001943". This endpoint returns the list of Code nodes that share the Concept node to which the specified code links. The list of Codes can be filtered to return only those Codes from particular sources (SABs).
      operationId: codes_code_id_codes_get
      parameters:
        - name: code_id
          in: path
          required: true
          description: the CodeId for the Code node, in format _SAB_:_code_.
          schema:
            type: string
            example: SNOMEDCT_US:254837009
        - name: sab
          in: query
          required: false
          description: A filter for one or more sources (SABs) for the Codes that share links to the same Concept to which the Code with CodeID=_code_id_ links. Can be either a list of values delimited with URL-encoded commas (e.g., ?sab=SAB1%2CSAB2%2SAB3) or individual key-value pairs (e.g., ?sab=SAB1&sab=SAB2&SAB=SAB3).
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              example: NCI,MDR
            default: []
      responses:
        '200':
          description: A JSON array of objects that correspond to Code nodes that share the Concept associated with the specified Code
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CodesCodesObj'
        '400':
          description: invalid parameter name
        '404':
          description: no Codes for the specified parameters (_code_id_ and _sab_)
        '5XX':
          description: Unknown error
  /codes/{code_id}/concepts:
    get:
      operationId: codes_code_id_concepts_get
      summary: In general, a Code node in UBKG has CODE relationships with (or links to) multiple Concept nodes. This endpoint returns a list of Concept nodes (Concept, Preferred term) that have CODE relationships with the specified Code node.
      parameters:
        - name: code_id
          in: path
          required: true
          description: The identifier for the Code node, in format _SAB_:_CODE_, where _SAB_ is an identifier for the source of the code.
          schema:
            type: string
            example: SNOMEDCT_US:254837009
      responses:
        '200':
          description: A JSON array of information on Concept nodes that have CODE relationships to the specified Code node
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConceptDetail'
        '404':
          description: no Concept nodes for the specified code
        '5XX':
          description: Unknown error
  /concepts/{concept_id}/codes:
    get:
      operationId: concepts_concept_id_codes_get
      summary: In general, a Concept node has CODE relationships with (links to) muliple Code nodes. This endpoint returns information on the set of Code nodes that link to the specified Concept.
      parameters:
        - name: concept_id
          in: path
          required: true
          description: The identifier for the Concept (also known as the Concept Unique Identifier, or CUI)
          schema:
            type: string
            example: C0678222
        - name: sab
          in: query
          required: false
          description: A filter for one or more sources (SABs) for the Codes that link to the specified Concept. Can be either a list of values delimited with URL-encoded commas (e.g., ?sab=SAB1%2CSAB2%2SAB3) or individual key-value pairs (e.g., ?sab=SAB1&sab=SAB2&SAB=SAB3).
          schema:
            type: array
            uniqueItems: true
            items:
              type: string
              example: MEDLINEPLUS,MSH,MEDCIN
            default: []
      responses:
        '200':
          description: A JSON array of code_id(s) (in format _SAB_:_CODE), for the Codes that link to the specified Concept
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: CHV 0000052645
        '400':
          description: invalid parameter name
        '404':
          description: no Codes for the specified parameters (_concept_id_ and _sab_)
        '5XX':
          description: Unknown error
  /concepts/{concept_id}/concepts:
    get:
      operationId: concepts_concept_id_concepts_get
      summary: Returns a list of concepts {Sab, Relationship, Concept, Prefterm} related to the concept
      parameters:
        - name: concept_id
          in: path
          required: true
          description: The concept identifier
          schema:
            type: string
            example: C0006142
      responses:
        '200':
          description: A JSON array of {Sab, Relationship, Concept, Prefterm} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SabRelationshipConceptTerm'
  /concepts/expand:
    post:
      operationId: concepts_expand_post
      summary: Returns a unique list of Concepts nodes (Concept, Preferred Term) on all paths including starting concept (query_concept_id) restricted by list of relationship types (rel), list of relationship sources (sab), and depth of travel. Answers the question, "What are the concepts that are within the specified number of hops (depth) away from a particular concept (query_concept_id), where the hops belong to a set of relationship types from a set of source?""
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConceptSabRelDepth"
            example:
              query_concept_id: C2720507
              sab: [SNOMEDCT_US]
              rel: [isa]
              depth: 2
      responses:
        '200':
          description: Return all {concept, prefterm}
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConceptPrefterm'
        '404':
          description: No concepts with paths to the Concept=_query_concept_id_ with relationship types in _rel_ filtered by sources in _sab_ up to path depth=_depth_
        '5XX':
          description: Unknown error
  /concepts/paths:
    post:
      operationId: concepts_path_post
      summary: Returns information on the Concept nodes that relate to a specified Concept, based on all paths with a specified relationship pattern within a specified set of sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConceptSabRel"
            example:
              query_concept_id: C2720507
              sab: [SNOMEDCT_US, HGNC]
              rel: [isa]
      responses:
        '200':
          description: Returns information on all Concept nodes in paths of the relationship pattern specified within the selected sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathItemConceptRelationshipSabPrefterm'
        '404':
          description: No concepts with paths to the Concept=_query_concept_id_ with relationship types in _rel_ filtered by sources in _sab_
        '5XX':
          description: Unknown error
  /concepts/shortestpaths:
    post:
      operationId: concepts_shortestpaths_post
      summary: Return all paths of the relationship pattern specified within the selected sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QconceptTconceptSabRel"
            example:
              query_concept_id: C2720507
              target_concept_id: C1272753
              sab: [SNOMEDCT_US, HGNC]
              rel: [isa, part_of]
      responses:
        '200':
          description: Return all paths of the relationship pattern specified within the selected sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathItemConceptRelationshipSabPrefterm'
  /concepts/trees:
    post:
      operationId: concepts_trees_post
      summary: Return all paths of the relationship pattern specified within the selected sources
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConceptSabRelDepth"
            example:
              query_concept_id: C2720507
              sab: [SNOMEDCT_US, HGNC]
              rel: [isa, isa]
              depth: 2
      responses:
        '200':
          description: Return all paths of the relationship pattern specified within the selected sources
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PathItemConceptRelationshipSabPrefterm'
  /concepts/{concept_id}/definitions:
    get:
      operationId: concepts_concept_id_definitions_get
      summary: Returns a list of definitions {Sab, Definition} of the concept
      parameters:
        - name: concept_id
          in: path
          required: true
          description: The concept identifier
          schema:
            type: string
            example: C0006142
      responses:
        '200':
          description: A JSON array of {Sab, Definition} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SabDefinition'
  /concepts/{concept_id}/semantics:
    get:
      operationId: concepts_concept_id_semantics_get
      summary: Returns a list of semantic_types {Sty, Tui, Stn} of the concept
      parameters:
        - name: concept_id
          in: path
          required: true
          description: The concept identifier
          schema:
            type: string
            example: C0304055
      responses:
        '200':
          description: A JSON array of {Sty, Tui, Stn} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StyTuiStn'
  /semantics/{semantic_id}/semantics:
    get:
      operationId: semantics_semantic_id_semantics_get
      summary: Returns a list of semantic_types {queryTUI, querySTN ,semantic, TUI_STN} of the semantic type
      parameters:
        - name: semantic_id
          in: path
          required: true
          description: The semantic identifier
          schema:
            type: string
            example: Physical Object
      responses:
        '200':
          description: A JSON array of {queryTUI, querySTN ,semantic, TUI_STN} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/QQST'
  /tui/{tui_id}/semantics:
    get:
      operationId: tui_tui_id_semantics_get
      summary: Returns a list of symantic_types {semantic, STN} of the type unique id (tui)
      parameters:
        - name: tui_id
          in: path
          required: true
          description: The TUI identifier
          schema:
            type: string
            example: T200
      responses:
        '200':
          description: A JSON array of {semantic, STN} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SemanticStn'
  /terms/{term_id}/codes:
    get:
      operationId: terms_term_id_codes_get
      summary: Returns a list of Code nodes (TermType, Code} of the text string
      parameters:
        - name: term_id
          in: path
          required: true
          description: The term identifier
          schema:
            type: string
            example: Breast cancer
      responses:
        '200':
          description: A JSON array of {TermType, Code} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TermtypeCode'
  /terms/{term_id}/concepts:
    get:
      operationId: terms_term_id_concepts_get
      summary: Returns a list of concepts associated with the text string
      parameters:
        - name: term_id
          in: path
          required: true
          description: The term identifier
          schema:
            type: string
            example: Breast cancer
      responses:
        '200':
          description: A JSON array of concepts associated with the term
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  example: C0794811
  /terms/{term_id}/concepts/terms:
    get:
      operationId: terms_term_id_concepts_terms_get
      summary: Returns an expanded list of concept(s) and preferred term(s) {Concept, Term} from an exact text match
      parameters:
        - name: term_id
          in: path
          required: true
          description: The term identifier
          schema:
            type: string
            example: Breast cancer
      responses:
        '200':
          description: A JSON array of {Concept, Term} dictionaries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ConceptTerm'
components:
  schemas:
    CodesCodesObj: # Schema name
      description: Code nodes that share links to the same Concept node to which a specified CodeID links.
      type: object
      properties:
        concept:
          description: The CUI (Concept Unique Identifier) for the shared Concept node.
          type: string
          example: C0006142
        code:
          description: CodeID of a Code node, in format _SAB_:_CODE_
          type: string
          example: CCS 2.5
        SAB:
          description: an identifier for the source of the code. Corresponds to the Source Abbreviaion (SAB) of a Code in the UMLS.
          type: string
          example: CCF
    ConceptDetail:    # Schema name
      type: object
      description: Information on a Concept node.
      properties:
        concept:
          type: string
          description: Concept Unique Identifier (CUI) for the Concept node
          example: C0006142
        prefterm:
          type: string
          description: Preferred term for the Concept node.
          example: Malignant neoplasm of breast
    ConceptSabRel:    # Schema name
      type: object
      description: Request body for POST endpoints such as concepts/{concept_id)/paths
      properties:
        query_concept_id:
          type: string
          description: Concept Unique Identifier (CUI) for the Concept node
          example: C2720507
        sab:
          type: array
          description: array of identifiers for vocabularies or ontology sources to which to limit Code nodes in the response.
          items:
            type: string
          example: ["SNOMEDCT_US", "HGNC"]
        rel:
          type: array
          description: array of relationship types to which to limit paths in the response.
          items:
            type: string
          example: ["isa"]
    ConceptSabRelDepth:    # Schema name
      type: object
      description: Request body for POST endpoints such as concepts/expand and concepts/paths
      properties:
        query_concept_id:
          type: string
          description: Concept Unique Identifier (CUI) for a Concept node in the UBKG
          example: C2720507
        sab:
          type: array
          description: array of identifiers for vocabularies or ontology sources to which to limit Code nodes in the response.
          items:
            type: string
          example: ["SNOMEDCT_US", "HGNC"]
        rel:
          type: array
          description: array of relationship types to which to limit paths in the response.
          items:
            type: string
          example: ["isa"]
        depth:
          type: integer
          description: depth of path--i.e., the limit to the number of "hops" to identify between the concept specified by _query_concept_id_ and other concepts. For example, a depth of 2 means to only extend a path search out to 2 hops away from _query_concept_id_.
          example: 2
    ConceptPrefterm: # Schema name
      type: object
      properties:
        concept:
          type: string
          example: C0006826
        prefterm:
          type: string
          example: Malignant Neoplasms
    ConceptTerm: # Schema name
      type: object
      properties:
        concept:
          type: string
          example: C0006826
        term:
          type: string
          example: LNC LA14283-8
    PathItemConceptRelationshipSabPrefterm: # Schema name
      type: object
      properties:
        path:
          type: string
        item:
          type: string
        concept:
          type: string
          example: C0006826
        relationship:
          type: string
          example: CHD
        sab:
          type: string
          example: ICD10AM
        prefterm:
          type: string
          example: Malignant Neoplasms
    QconceptTconceptSabRel:    # Schema name
      type: object
      properties:
        query_concept_id:
          type: string
          example: C2720507
        target_concept_id:
          type: string
          example: C1272753
        sab:
          type: array
          items:
            type: string
          example: ["SNOMEDCT_US", "HGNC"]
        rel:
          type: array
          items:
            type: string
          example: ["isa", "part_of"]
    QQST: # Schema name
      type: object
      properties:
        queryTUI:
          type: string
          example: T072
        querySTN:
          type: string
          example: A1
        semantic:
          type: string
          example: Entity
        TUI:
          type: string
          example: T071
        STN:
          type: string
          example: A
    SabDefinition: # Schema name
      type: object
      properties:
        sab:
          type: string
          example: NCI
        definition:
          type: string
          example: A primary or metastatic malignant neoplasm involving the breast. The vast majority of cases are carcinomas arising from the breast parenchyma or the nipple. Malignant breast neoplasms occur more frequently in females than in males.
    SabRelationshipConceptTerm: # Schema name
      type: object
      properties:
        sab:
          type: string
          example: ICD10AM
        relationship:
          type: string
          example: CHD
        concept:
          type: string
          example: C0006826
        prefterm:
          type: string
          example: Malignant Neoplasms
    SemanticStn: # Schema name
      type: object
      properties:
        semantic:
          type: string
          example: Entity
        STN:
          type: string
          example: A
    StyTuiStn: # Schema name
      type: object
      properties:
        sty:
          type: string
          example: Organic Chemical
        tui:
          type: string
          example: T109
        stn:
          type: string
          example: A1.4.1.2.1
    TermtypeCode: # Schema name
      type: object
      properties:
        termtype:
          type: string
          example: LA
        code:
          type: string
          example: LNC LA14283-8
    AssayNameRequest: # Schema name CPK MR 2023.
      type: object
      description: Request body for assaytype POST request
      properties:
        name:
          anyOf:
            - type: string
            - type: array
              items:
                type: string
          description: AssayType name which can be a string or an array of strings
          example: [ PAS, Image Pyramid ]
        application_context:
          type: string
          default: HUBMAP
          enum:
            - HUBMAP
            - SENNET
            - hubmap
            - sennet
            - HuBMAP
            - SenNet
